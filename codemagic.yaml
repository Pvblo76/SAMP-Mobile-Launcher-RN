workflows:
  android-build:
    name: Build con Gradle 8.1.1
    environment:
      vars:
        GRADLE_VERSION: "8.1.1"
      java: 17

    scripts:
      - name: Usa Gradle 8.1.1 invece di quello del progetto
        script: |
          # Create a clean directory for Gradle
          rm -rf gradle-temp
          mkdir -p gradle-temp
          cd gradle-temp
          
          # Download and extract Gradle
          wget https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip
          unzip -q gradle-$GRADLE_VERSION-bin.zip
          
          # Make gradle executable
          chmod +x gradle-$GRADLE_VERSION/bin/gradle
          
          # Add to PATH and verify
          export PATH="$PWD/gradle-$GRADLE_VERSION/bin:$PATH"
          echo "PATH is now: $PATH"
          gradle --version
          
          # Create a persistent PATH for subsequent scripts
          echo "export PATH=$PWD/gradle-$GRADLE_VERSION/bin:\$PATH" >> ~/.bashrc
          source ~/.bashrc

      - name: Inizializza progetto con Gradle Init
        script: |
          # Ensure PATH is set
          source ~/.bashrc
          
          # Verify Gradle is available
          gradle --version || (echo "Gradle not found in PATH" && exit 1)
          
          # Change back to project root (assuming this runs in project dir)
          cd ..
          
          # Check if project is already initialized (e.g., has build.gradle)
          if [ ! -f "build.gradle" ] && [ ! -f "build.gradle.kts" ]; then
            echo "Project not initialized, running gradle init"
            gradle init --type basic --dsl groovy --test-framework junit --project-name android-project --package android.project || (echo "Failed to run gradle init" && exit 1)
          else
            echo "Project already initialized, skipping init"
          fi
          
          # Verify initialization
          ls -la | grep build.gradle || echo "No build.gradle found after init"

      - name: Inizializza o aggiorna Gradle Wrapper
        script: |
          # Ensure PATH is set
          source ~/.bashrc
          
          # Verify Gradle is available
          gradle --version || (echo "Gradle not found in PATH" && exit 1)
          
          # Change back to project root (assuming this runs in project dir)
          cd ..
          
          # Initialize or update the Gradle wrapper to match the specified version
          # This will create/update gradlew, gradle/wrapper/gradle-wrapper.properties if needed
          gradle wrapper --gradle-version $GRADLE_VERSION || (echo "Failed to initialize Gradle wrapper" && exit 1)
          
          # Verify the wrapper
          ./gradlew --version

      - name: Build del progetto
        script: |
          # Ensure PATH is set (fallback if wrapper fails)
          source ~/.bashrc
          export PATH=$(dirname $(which gradle 2>/dev/null || echo "")):$(pwd)/gradle-temp/gradle-$GRADLE_VERSION/bin:$PATH
          
          # Verify Gradle wrapper is available
          ./gradlew --version || (echo "Gradle wrapper not found" && exit 1)
          
          # Run the build using the updated wrapper
          ./gradlew assembleDebug --no-daemon --android-skip-build-dependency-validation || (echo "Wrapper build failed, falling back to direct gradle" && gradle assembleRelease --no-daemon --android-skip-build-dependency-validation)

    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
